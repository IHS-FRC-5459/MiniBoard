// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5459.Protobot54592018.subsystems;

import org.usfirst.frc5459.Protobot54592018.commands.DriveCommand;
import org.usfirst.frc5459.Protobot54592018.Robot;
import org.usfirst.frc5459.Protobot54592018.RobotMap;
import org.usfirst.frc5459.Protobot54592018.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.DoubleSolenoid;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Solenoid;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Shifters extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
//    private final DoubleSolenoid shifterSolenoid = RobotMap.shiftersShifterSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    	
        // Set the default command for a subsystem here.
//    	Robot.shifters.autoshiftOn();;
         
    }
    /*
    public void autoshiftOn(){
    		setDefaultCommand(new AutomaticShift());
    	}
    public void autoshiftOff(){
		setDefaultCommand(new ShiftUp());
	}
    @Override
    */
    public void periodic() {
        // Put code here to be run every loop

    }
    /*
    public void shiftUp(){
    	//true or on?
    	RobotMap.shiftersShifterSolenoid.set(DoubleSolenoid.Value.kForward);
    }
    public void shiftDown(){
    	RobotMap.shiftersShifterSolenoid.set(DoubleSolenoid.Value.kReverse);
    }
    */
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

