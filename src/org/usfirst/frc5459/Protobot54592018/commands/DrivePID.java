// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5459.Protobot54592018.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.command.PIDCommand;

import org.usfirst.frc5459.Protobot54592018.Robot;
import org.usfirst.frc5459.Protobot54592018.RobotMap;

/**
 *
 */



public class DrivePID extends PIDCommand {
  
	
  
       double targetDistance;
       double output;
       
    public DrivePID(){
    	super("DrivePID", 0.00024, 0.0, 0.0, 0.02);
    }
   
    public DrivePID(double targetDistance) {
    	

   
        super("DrivePID", 0.00024, 0.0, 0.0, 0.02);

    	/*
    	1024 pulses per rotation
    	6 in wheels
    	18.849555921538759430775860299677
    	
    	
    	*/

        getPIDController().setContinuous(true);
        //is this true or false?
        getPIDController().setAbsoluteTolerance(0.2);
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PID
        this.targetDistance = targetDistance;

       requires(Robot.drive);

        requires(Robot.sensors);
      

        
       
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	/*
    	RobotMap.driveRightFront.config_kP(0, 1.0, 0);
    	RobotMap.driveRightFront.config_kI(0, 0.0, 0);
    	RobotMap.driveRightFront.config_kD(0, 0.0, 0);
    	*/
    	usePIDOutput(output);
    	System.out.println("drive PID executeing");
    	System.out.println("drivePID targetDistance" + targetDistance);
    	System.out.println("drivePID output" + output);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	RobotMap.driveLeftGroup.set(0);
		RobotMap.driveRightGroup.set(0);
		Robot.sensors.SetPositionY(0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    	Robot.sensors.SetPositionY(0);
    }

	@Override
	protected double returnPIDInput() {
		// TODO Auto-generated method stub

		return Robot.sensors.GetPositionY();

	//	return Robot.sensors.getAccelX();
		
	}

	@Override
	protected void usePIDOutput(double output) {
		// TODO Auto-generated method stub
		RobotMap.driveLeftGroup.set(output);
		RobotMap.driveRightGroup.set(output);
		this.output =  output;
		
		
	}
}

